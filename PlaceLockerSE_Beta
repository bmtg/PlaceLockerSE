

javascript: (function () {
	// V0.5SE
	
	function toTitleCase(str) {
		if (!str) {
			return str;
		}
		var allCaps = (str === str.toUpperCase());
		return str.replace(/\w\S*/g, function(txt) {
			return ((txt == txt.toUpperCase()) && !allCaps) ? txt : txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
		});
	}

	function toTitleCaseNew(str) {
		if (!str) {
			return str;
		}
		var allCaps = (str === str.toUpperCase());
		return str.replace(/\b([^\W_\d][^\s-]*) */g, function(txt) {
			return ((txt == txt.toUpperCase()) && !allCaps) ? txt : txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
		});
	}

	function normalizePhone(s) {
		if (!s) {
			return s;
		}
		if (/^\(\d{3}\) \d{3}-\d{4}$/.test(s) || /^\d{3}-\d{3}-\d{4}$/.test(s)) {
			return s;
		}
		var s1 = s.replace(/\D/g,'');
		var m = s1.match(/^1?(\d{3})(\d{3})(\d{4})$/);
		if (!m) {
			return s;
		}
		else {
			return  m[1] + "-" + m[2] + "-" + m[3];
		}
	}
 
	function normalizeURL(s) {
		if (!s) {
			return s;
		}
		var m = s.match(/^https?:\/\/(.*)$/i);
		if (m) {
			return m[1];
		}
		else {
			return s;
		}
	}
 
	var count = 0;
	var thisUser = W.loginManager.user;
	if (thisUser === null)
		return;
	var usrRank = thisUser.normalizedLevel;
	var UpdateObject;
	var lockLevel3 = 2;
	var lockLevel4 = 3;
	var lockLevel5 = 4;

	if (lockLevel3 > (usrRank - 1)) { lockLevel3 = (usrRank - 1); }
	if (lockLevel4 > (usrRank - 1)) { lockLevel4 = (usrRank - 1); }
	if (lockLevel5 > (usrRank - 1)) { lockLevel5 = (usrRank - 1); }
  
	if (typeof (require) !== "undefined") { UpdateObject = require("Waze/Action/UpdateObject"); }
	else { UpdateObject = W.Action.UpdateObject; }

	jQuery("#map-search input[name=q]").focus();

	for (var ix = 0; ix < W.selectionManager.selectedItems.length; ix++) {
		var item = W.selectionManager.selectedItems[ix].model;
		var categories   = item.attributes.categories;
		var vname   = item.attributes.name;
		var addr = item.getAddressDetails();
	  
		// if (item.type == "venue" && (addr.stateID == "100000023" || addr.stateID == "100000033") )  {
		if (item.type == "venue" )  {
        
        	var newUrl = normalizeURL(item.attributes.url);
			var newName = toTitleCaseNew(vname);
			var newPhone = normalizePhone(item.attributes.phone);
			W.model.actionManager.add(new UpdateObject(item, { name: newName, phone: newPhone, url: newUrl }));
			
			// Gas Station correction
            
        	if ( categories.indexOf("GAS_STATION") > -1  ) {
				if (vname.toUpperCase() == "SAM'S CLUB" || vname.toUpperCase() == "SAM'S CLUB FUEL CENTER" || vname.toUpperCase() == "SAM'S CLUB GAS" || 
					vname.toUpperCase() == "SAMS CLUB" || vname.toUpperCase() == "SAMS CLUB FUEL CENTER" || vname.toUpperCase() == "SAMS CLUB GAS" || 
					vname.toUpperCase() == "SAM'S CLUB FUEL" || vname.toUpperCase() == "SAMS CLUB FUEL" || 
					vname.toUpperCase() == "SAM'S CLUB GASOLINE" || vname.toUpperCase() == "SAMS CLUB GASOLINE" ) {
					W.model.actionManager.add(new UpdateObject(item, { name: "Sam's Club Gasoline", url: "samsclub.com", description: "Members only", 
					services: ["CREDIT_CARDS","PARKING_FOR_CUSTOMERS","WHEELCHAIR_ACCESSIBLE"] }));
				}
				else if (vname.toUpperCase() == "COSTCO" || vname.toUpperCase() == "COSTCO FUEL CENTER" || vname.toUpperCase() == "COSTCO GASOLINE" || 
					vname.toUpperCase() == "COSTCO GAS" || vname.toUpperCase() == "COSTCO FUEL" ) {
					W.model.actionManager.add(new UpdateObject(item, { name: "Costco Gasoline", url: "costco.com", description: "Members only", 
					services: ["CREDIT_CARDS","PARKING_FOR_CUSTOMERS","WHEELCHAIR_ACCESSIBLE"] }));
				}
				else if (vname.toUpperCase() == "BJ'S" || vname.toUpperCase() == "BJ'S FUEL CENTER" || vname.toUpperCase() == "BJ'S GAS" || 
					vname.toUpperCase() == "BJS" || vname.toUpperCase() == "BJS FUEL CENTER" || vname.toUpperCase() == "BJS GAS" ||
					vname.toUpperCase() == "BJ'S FUEL" || vname.toUpperCase() == "BJS FUEL" || vname.toUpperCase() == "BJ'S GASOLINE" || vname.toUpperCase() == "BJS GASOLINE" ||
					vname.toUpperCase() == "BJ'S WHOLESALE" || vname.toUpperCase() == "BJ'S WHOLESALE FUEL CENTER" || vname.toUpperCase() == "BJ'S WHOLESALE GAS" || 
					vname.toUpperCase() == "BJS WHOLESALE" || vname.toUpperCase() == "BJS WHOLESALE FUEL CENTER" || vname.toUpperCase() == "BJS WHOLESALE GAS" ||
					vname.toUpperCase() == "BJ'S WHOLESALE FUEL" || vname.toUpperCase() == "BJS WHOLESALE FUEL" || vname.toUpperCase() == "BJ'S WHOLESALE GASOLINE" || vname.toUpperCase() == "BJS WHOLESALE GASOLINE" ||
					vname.toUpperCase() == "BJ'S WHOLESALE CLUB" || vname.toUpperCase() == "BJ'S WHOLESALE CLUB FUEL CENTER" || vname.toUpperCase() == "BJ'S WHOLESALE CLUB GAS" || 
					vname.toUpperCase() == "BJS WHOLESALE CLUB" || vname.toUpperCase() == "BJS WHOLESALE CLUB FUEL CENTER" || vname.toUpperCase() == "BJS WHOLESALE CLUB GAS" ||
					vname.toUpperCase() == "BJ'S WHOLESALE CLUB FUEL" || vname.toUpperCase() == "BJS WHOLESALE CLUB FUEL" || vname.toUpperCase() == "BJ'S WHOLESALE CLUB GASOLINE" || vname.toUpperCase() == "BJS WHOLESALE CLUB GASOLINE" ) {
					W.model.actionManager.add(new UpdateObject(item, { name: "BJ's Gasoline", url: "bjs.com", description: "Members only", 
					services: ["CREDIT_CARDS","PARKING_FOR_CUSTOMERS","WHEELCHAIR_ACCESSIBLE"] }));
				}
				else {
					if (!(item.attributes.brand == vname || item.attributes.brand == "" || item.attributes.brand == null)) {
						W.model.actionManager.add(new UpdateObject(item, { name: item.attributes.brand, aliases: [toTitleCaseNew(vname)] }));
						vname = item.attributes.brand;
					}
					W.model.actionManager.add(new UpdateObject(item, { services: ["RESTROOMS","CREDIT_CARDS","AIR_CONDITIONING","PARKING_FOR_CUSTOMERS","WHEELCHAIR_ACCESSIBLE"] }));
					if ( categories.indexOf("ATM") > -1 ) { 
						if ( categories.indexOf("CAR_WASH") > -1 ) { 
							W.model.actionManager.add(new UpdateObject(item, { categories: ["GAS_STATION","CONVENIENCE_STORE","CAR_WASH","ATM"] }));
						}
						else {
							W.model.actionManager.add(new UpdateObject(item, { categories: ["GAS_STATION","CONVENIENCE_STORE","ATM"] }));
						}
					}
					else {
						if ( categories.indexOf("CAR_WASH") > -1 ) { 
							W.model.actionManager.add(new UpdateObject(item, { categories: ["GAS_STATION","CONVENIENCE_STORE","CAR_WASH"] }));
						}
						else {
							W.model.actionManager.add(new UpdateObject(item, { categories: ["GAS_STATION","CONVENIENCE_STORE"] }));
						}
					}
				}
    		}
    		
        	// Place Harmonization 
        	
        	tempCat = item.attributes.categories;  
        	
        	if (vname.toUpperCase() == "7-ELEVEN" || vname.toUpperCase() == "7 ELEVEN" || vname.toUpperCase() == "SEVEN-ELEVEN" || 
        		vname.toUpperCase() == "SEVEN ELEVEN" || vname.toUpperCase() == "7-11" || vname.toUpperCase() == "7 11" || 
        		vname.toUpperCase() == "711" || vname.toUpperCase() == "SEVEN 11" ) {
        		W.model.actionManager.add(new UpdateObject(item, { name: "7-Eleven", aliases: ["7-11"], url: "7-eleven.com" }));
        	}
        	
         else if (vname.toUpperCase() == "AAA" || vname.toUpperCase() == "AMERICAN AUTOMOBILE ASSOCIATION" ||
            	vname.toUpperCase() == "A A A" || vname.toUpperCase() == "A.A.A." || vname.toUpperCase() == "Triple A" ) {
            	tempCat = ["ORGANIZATION_OR_ASSOCIATION"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "AAA", aliases: ["American Automobile Association"], url: "aaa.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "ACE HARDWARE" || (vname.toUpperCase() == "ACE" && categories.indexOf("HARDWARE_STORE") > -1 ) ) {
        		tempCat = ["HARDWARE_STORE"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Ace Hardware", url: "acehardware.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "APPLEBEE'S" || vname.toUpperCase() == "APPLEBEES" ||
        		vname.toUpperCase() == "APPLEBY'S" || vname.toUpperCase() == "APPLEBYS" ) {
        		tempCat = ["RESTAURANT"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Applebee's", url: "applebees.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "ARBY'S" || vname.toUpperCase() == "ARBYS" ) {
        		tempCat = ["FAST_FOOD"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Arby's", url: "arbys.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "AUTOZONE" || vname.toUpperCase() == "AUTO ZONE" ) {
        		tempCat = ["CAR_SERVICES"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "AutoZone", url: "autozone.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "AVIS" || vname.toUpperCase() == "AVIS CAR RENTAL" ||
        		vname.toUpperCase() == "AVIS RENT-A-CAR" || vname.toUpperCase() == "AVIS RENT A CAR" || 
        		vname.toUpperCase() == "AVIS RENTAL" || vname.toUpperCase() == "AVIS RENTAL CAR" ) {
        		tempCat = ["CAR_RENTAL"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Avis", url: "avis.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "BANK OF AMERICA" || vname.toUpperCase() == "B OF A" || vname.toUpperCase() == "BOFA" ) {
        		tempCat = ["BANK_FINANCIAL","ATM"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Bank of America", url: "bankofamerica.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "BB&T" || vname.toUpperCase() == "BBT" || vname.toUpperCase() == "BB AND T" || 
        		vname.toUpperCase() == "BBANDT" || vname.toUpperCase() == "BB & T" ) {
        		tempCat = ["BANK_FINANCIAL","ATM"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "BB&T", aliases: ["BBT","BB and T"], url: "bbt.com", categories: tempCat }));
        	}
        	
        	// BJ's Gasoline: see gas station section
            
         else if ( !(categories.indexOf("GAS_STATION") > -1) && !(categories.indexOf("RESTAURANT") > -1) && 
            	(vname.toUpperCase() == "BJ'S" || vname.toUpperCase() == "BJS" || vname.toUpperCase() == "BJ'S WHOLESALE" || vname.toUpperCase() == "BJS WHOLESALE" ||
            	vname.toUpperCase() == "BJ'S WHOLESALE CLUB" || vname.toUpperCase() == "BJS WHOLESALE CLUB" ) ) {
        		tempCat = ["SUPERMARKET_GROCERY","DEPARTMENT_STORE","FURNITURE_HOME_STORE","ELECTRONICS","FASHION_AND_CLOTHING"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "BJ's Wholesale Club", url: "bjs.com", description: "Members only",
        		categories: tempCat, services: ["RESTROOMS","CREDIT_CARDS","AIR_CONDITIONING","PARKING_FOR_CUSTOMERS","WHEELCHAIR_ACCESSIBLE"] }));
        	}
        	
         else if (vname.toUpperCase() == "BURGER KING" || vname.toUpperCase() == "BK" || vname.toUpperCase() == "BURGERKING" ) {
        		tempCat = ["FAST_FOOD"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Burger King", aliases: ["BK"], url: "bk.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "CHICK-FIL-A" || vname.toUpperCase() == "CHIC-FIL-A" ||
        		vname.toUpperCase() == "CHICK FIL A" || vname.toUpperCase() == "CHICKFILA" ||
        		vname.toUpperCase() == "CHICFILA" || vname.toUpperCase() == "CHICK FILA" ) {
        		tempCat = ["FAST_FOOD"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Chick-fil-A", aliases: ["Chick Fil A","Chickfila"], url: "chickfila.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "CHUCK E CHEESE'S" || vname.toUpperCase() == "CHUCK 'E' CHEESE'S" || vname.toUpperCase() == "CHUCK E CHEESES" || vname.toUpperCase() == "CEC" || 
        		vname.toUpperCase() == "CHUCK E CHEESE" || vname.toUpperCase() == "CHUCK 'E' CHEESE" || vname.toUpperCase() == "CHUCK 'E CHEESE" || 
        		vname.toUpperCase() == "CHUCK 'E CHEESE'S" || vname.toUpperCase() == "CHUCK 'E CHEESES" || vname.toUpperCase() == "CHUCK 'E' CHEESES" ) {
        		tempCat = ["GAME_CLUB","RESTAURANT"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Chuck E Cheese's", aliases: ["CEC"], url: "chuckecheese.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "CITGO" || vname.toUpperCase() == "CITGO GAS" ) {
        		W.model.actionManager.add(new UpdateObject(item, { name: "Citgo", url: "citgo.com" }));
        	}
            
            // Costco Gasoline: see gas station section
            
         else if ( !(categories.indexOf("GAS_STATION") > -1) && (vname.toUpperCase() == "COSTCO" || vname.toUpperCase() == "COSCO" )) {
        		tempCat = ["SUPERMARKET_GROCERY","DEPARTMENT_STORE","FURNITURE_HOME_STORE","ELECTRONICS","FASHION_AND_CLOTHING"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Costco", description: "Members only", url: "costco.com", 
        		categories: tempCat, services: ["RESTROOMS","CREDIT_CARDS","AIR_CONDITIONING","PARKING_FOR_CUSTOMERS","WHEELCHAIR_ACCESSIBLE"] }));
        	}
        	
         else if (vname.toUpperCase() == "CVS PHARMACY" || vname.toUpperCase() == "CVS" || 
				vname.toUpperCase() == "CVS-PHARMACY" || vname.toUpperCase() == "C V S" ) {
				tempCat = ["PHARMACY","CONVENIENCE_STORE"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "CVS Pharmacy", url: "cvs.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "DAIRY QUEEN" || vname.toUpperCase() == "DQ" ) {
        		tempCat = ["FAST_FOOD","ICE_CREAM"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Dairy Queen", aliases: ["DQ"], url: "dq.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "DUNKIN' DONUTS" || vname.toUpperCase() == "DUNKIN DONUTS" || 
        		vname.toUpperCase() == "DUNKIN' DONUTS" || vname.toUpperCase() == "DD" ) {
        		tempCat = ["BAKERY","CAFE"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Dunkin' Donuts", url: "dunkindonuts.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "ENTERPRISE" || vname.toUpperCase() == "ENTERPRISE CAR RENTAL" ||
        		vname.toUpperCase() == "ENTERPRISE RENT-A-CAR" || vname.toUpperCase() == "ENTERPRISE RENT A CAR" || 
        		vname.toUpperCase() == "ENTERPRISE RENTAL" || vname.toUpperCase() == "ENTERPRISE RENTAL CAR" ) {
        		tempCat = ["CAR_RENTAL"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Enterprise", url: "enterprise.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "GNC" || vname.toUpperCase() == "G N C" ||
        		vname.toUpperCase() == "GENERAL NUTRITION CENTER" || vname.toUpperCase() == "GENERAL NUTRITION CENTERS" ) {
        		tempCat = ["PERSONAL_CARE"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "GNC", aliases: ["General Nutrition Centers"], url: "gnc.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "KFC" || vname.toUpperCase() == "K F C" ||
        		vname.toUpperCase() == "KENTUCKY FRIED CHICKEN" || vname.toUpperCase() == "KENTUCKY FRIED" ) {
        		tempCat = ["FAST_FOOD"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "KFC", aliases: ["Kentucky Fried Chicken"], url: "kfc.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "LOWE'S" || vname.toUpperCase() == "LOWE'S HOME IMPROVEMENT" || 
        		vname.toUpperCase() == "LOWES" || vname.toUpperCase() == "LOWES HOME IMPROVEMENT" ) {
        		tempCat = ["HARDWARE_STORE"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Lowe's", url: "lowes.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "MCDONALDS" || vname.toUpperCase() == "MCDONALD'S" || vname.toUpperCase() == "MCDS" || 
        		vname.toUpperCase() == "MCD'S" || vname.toUpperCase() == "MCDONALD" || vname.toUpperCase() == "MCDONALD" ) {
        		tempCat = ["FAST_FOOD"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "McDonald's", url: "mcdonalds.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "RACETRAC" || vname.toUpperCase() == "RACE TRAC" ) {
        		W.model.actionManager.add(new UpdateObject(item, { name: "RaceTrac", url: "racetrac.com" }));
        	}
            
            // Sam's Club Gasoline: see gas station section
            
         else if ( !(categories.indexOf("GAS_STATION") > -1) && (vname.toUpperCase() == "SAM'S CLUB" || vname.toUpperCase() == "SAMS CLUB" )) {
        		tempCat = ["SUPERMARKET_GROCERY","DEPARTMENT_STORE","FURNITURE_HOME_STORE","ELECTRONICS","FASHION_AND_CLOTHING"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Sam's Club", url: "samsclub.com", description: "Members only", 
        		categories: tempCat, services: ["RESTROOMS","CREDIT_CARDS","AIR_CONDITIONING","PARKING_FOR_CUSTOMERS","WHEELCHAIR_ACCESSIBLE"] }));
        	}
        	
         else if (vname.toUpperCase() == "SHELL" || vname.toUpperCase() == "SHELL GAS" ) {
        		W.model.actionManager.add(new UpdateObject(item, { name: "Shell", url: "shell.us/products-services/shell-for-motorists/station-locator.html" }));
        	}
            
         else if (vname.toUpperCase() == "SONIC" || vname.toUpperCase() == "SONIC DRIVEIN" || 
            	vname.toUpperCase() == "SONIC DRIVE IN" || vname.toUpperCase() == "SONIC DRIVE-IN" ) {
        		tempCat = ["FAST_FOOD"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Sonic Drive-In", url: "sonicdrivein.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "STARBUCKS" || vname.toUpperCase() == "STARBUCK" || vname.toUpperCase() == "STAR BUCKS" ) {
        		tempCat = ["CAFE"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Starbucks", aliases: [], url: "starbucks.com", categories: tempCat }));
        	}
        	
         else if (vname.toUpperCase() == "TACO BELL" || vname.toUpperCase() == "TACOBELL" ) {
        		tempCat = ["FAST_FOOD"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "Taco Bell", url: "tacobell.com", categories: tempCat }));
        	}
        	
        	else if (vname.toUpperCase() == "THE HOME DEPOT" || vname.toUpperCase() == "HOME DEPOT" || vname.toUpperCase() == "HOMEDEPOT" ) {
        		tempCat = ["HARDWARE_STORE"];
        		W.model.actionManager.add(new UpdateObject(item, { name: "The Home Depot", url: "homedepot.com", categories: tempCat }));
        	}
        	
        	
        	     
//			Address check

			if (!addr) {
				 alert("Place has no address.");
				 return;
			}
			if (!item.attributes.name) {
				 alert("Place does not have a name.");
				 return;
			}
			if (!addr.streetName || addr.streetName === "No street") {
				 alert("Place does not have a street.");
				 return;
			}
			if (!addr.houseNumber) {
				 alert("Place does not have a house number.");
				 return;
			}
			
         //   Place Area check
            
        	if ( item.isPoint() && (tempCat.indexOf("GAS_STATION") > -1 || tempCat.indexOf("PARKING_LOT") > -1 || tempCat.indexOf("AIRPORT") > -1 ||
			tempCat.indexOf("BRIDGE") > -1 || tempCat.indexOf("CEMETERY") > -1 || tempCat.indexOf("EMBASSY_CONSULATE") > -1 || 
			tempCat.indexOf("FIRE_DEPARTMENT") > -1 || tempCat.indexOf("HOSPITAL_MEDICAL_CARE") > -1 || tempCat.indexOf("POLICE_STATION") > -1 || 
			tempCat.indexOf("PRISON_CORRECTIONAL_FACILITY") > -1 || tempCat.indexOf("SCHOOL") > -1 || tempCat.indexOf("SHOPPING_CENTER") > -1 || 
			tempCat.indexOf("RACING_TRACK") > -1 || tempCat.indexOf("THEME_PARK") > -1 || tempCat.indexOf("GOLF_COURSE") > -1 || 
			tempCat.indexOf("PARK") > -1  )  ) {
        		alert("This category should be an area.  Please change it, or manually lock it.");
        		return;
        	}
        	if ( item.isPoint() && tempCat.indexOf("STADIUM_ARENA") > -1 ) {
        		alert("This category should be an area.  Please change it, or manually lock it.  ** Consider using Sports Court for small/local fields. **");
        		return;
        	}
        	if ( item.isPoint() && (tempCat.indexOf("JUNCTION_INTERCHANGE") > -1 || tempCat.indexOf("SEA_LAKE_POOL") > -1 || tempCat.indexOf("RIVER_STREAM") > -1 ||
			tempCat.indexOf("FOREST_GROVE") > -1 || tempCat.indexOf("CANAL") > -1 || tempCat.indexOf("SWAMP_MARSH") > -1 || 
			tempCat.indexOf("ISLAND") > -1 || tempCat.indexOf("BEACH") > -1 || tempCat.indexOf("TRANSPORTATION") > -1  )  ) {
        		alert("This category is usually not mapped in the SE region.  Please manually lock it, if it's a valid place.");
        		return;
        	}
        	if ( item.is2D() && (tempCat.indexOf("CAR_DEALERSHIP") > -1 )  ) {
        		alert("This category should be a point place, not an area.");
        		return;
        	}
        	
        	
			
        	// Place locking
			
			var levelToLock = lockLevel3;
        	
			if (tempCat.indexOf("COLLEGE_UNIVERSITY") > -1 && tempCat.indexOf("PARKING_LOT") > -1) {
				levelToLock = lockLevel4;
			}
			else if (item.isPoint() && tempCat.indexOf("COLLEGE_UNIVERSITY") > -1 && !(tempCat.indexOf("HOSPITAL_MEDICAL_CARE") > -1)) {
				levelToLock = lockLevel4;
			}
			else if (tempCat.indexOf("HOSPITAL_MEDICAL_CARE") > -1 || tempCat.indexOf("COLLEGE_UNIVERSITY") > -1 || 
			tempCat.indexOf("STADIUM_ARENA") > -1 || tempCat.indexOf("SCHOOL") > -1 || tempCat.indexOf("AIRPORT") > -1 ) {
				levelToLock = lockLevel5;
			}

 
			if (item.attributes.lockRank < levelToLock) {
				 W.model.actionManager.add(new UpdateObject(item, { lockRank: levelToLock }));
			}
    	
		}
    	
	}
    

})();

